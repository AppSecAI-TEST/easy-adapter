apply plugin: 'android-library'
apply plugin: 'maven'
apply plugin: 'signing'

version = "1.0.0"
group = "uk.co.ribot"

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.3"

    defaultConfig {
        minSdkVersion 7
        targetSdkVersion 19
        versionCode 1
        versionName "1.0"
    }
}

configurations {
    archives {
        extendsFrom configurations.default
    }
}

signing {
    required { has("release") && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
}

android.libraryVariants.all { variant ->

    task("generate${variant.name}Javadoc", type: Javadoc) {
        def versionName = android.defaultConfig.versionName
        title = "EasyAdapter $versionName API"
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompile.source
        ext.androidJar = "${android.plugin.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
        options.links("http://docs.oracle.com/javase/7/docs/api/");
        exclude '**/BuildConfig.java', '**/R.java'

        def name = variant.buildType.name
        def destDocs = "docs/v$versionName"
        if (!name.equals(com.android.builder.BuilderConstants.DEBUG)) {
            copy {
                from 'build/docs/javadoc'
                into  destDocs
            }
        }

    }

}


android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    if (name.equals(com.android.builder.BuilderConstants.DEBUG)) {
        return; // Skip debug builds.
    }
    def task = project.tasks.create "jar${name.capitalize()}", Jar
    task.dependsOn variant.javaCompile
    task.from variant.javaCompile.destinationDir
    artifacts.add('archives', task);
}

uploadArchives {
    configuration = configurations.archives
    repositories.mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

        repository(url: sonatypeRepo) {
            authentication(userName: sonatypeUsername, password: sonatypePassword)
        }

        pom.project {
            name 'Android Easy Adapter'
            packaging 'aar'
            description 'Library that facilitates the use of AdapterViews on Android'
            url 'https://github.com/ribot/EasyAdapter'

            scm {
                url 'git@github.com:ribot/easy-adapter.git'
                connection 'scm:git:git@github.com:ribot/easy-adapter.git'
                developerConnection 'scm:git:git@github.com:ribot/easy-adapter.git'
            }

            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id 'ivancarballo'
                    name 'Ivan Carballo'
                    email 'ivan@ribot.co.uk'
                }
            }
        }
    }
}
